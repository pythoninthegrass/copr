#!/usr/bin/env bash

# assign variables for author, repo_name and releaseversion
author="$(echo $2 | cut -d '/' -f1)"
repo_name="$(echo $2 | cut -d '/' -f2)"
release_ver="$(rpm -E %fedora)"
repo_file="/etc/yum.repos.d/_copr_$author-$repo_name.repo"
logged_in_user=$(logname)
logged_in_home=$(eval echo ~$logged_in_user)
backup_dir="${logged_in_home}/.copr"
repo_file_bak="${backup_dir}/_copr_$author-$repo_name.repo"

# the original copr warning message
question=$(cat <<EOF
Enabling a Copr repository. Please note that this repository is not part
of the main distribution, and quality may vary.

The Fedora Project does not exercise any power over the contents of
this repository beyond the rules outlined in the Copr FAQ at
<https://docs.pagure.org/copr.copr/user_documentation.html#what-i-can-build-in-copr>,
and packages are not held to any quality or security level.

Please do not file bug reports about these packages in Fedora
Bugzilla. In case of problems, contact the owner of this repository.

Do you really want to enable copr.fedorainfracloud.org/$author/$repo_name? [y/N]:
EOF
)

# the help text
help=$(cat << EOF

====== Experimental COPR Command in non-DNF Fedora Distributions ======

This Tool is not made or supported by the Fedora Project,
but aims to reproduce the "dnf copr" functionalities for easily adding COPRs.

Usage: copr [OPTION] [ARGUMENT]

Options:
  enable    Add COPR repository.
  remove    Remove COPR repository after backing it up.
  list      List all COPR repositories in your repo folder.
  search    Search for a COPR repository by name (in your Browser)
  disable   Keep a repo but disable it
  enable    Make a disabled repo active
  help      Display this help text.

Argument:
  Name of the COPR repository (for search) or "author/repo" (for install and remove)

Examples:
  copr enable kdesig/kde-nightly-qt6
  copr remove kdesig/kde-nightly-qt6
  copr list
  copr search uutils

For help, visit https://discussion.fedoraproject.org.

EOF
)

case $1 in
	"-h"|"--h"|"-help"|"--help"|"help")
		echo "$help"
		exit 0
		;;
	"")
		echo "No option specified. Use 'copr help' for more information."
		exit 1
		;;
esac

# Main loop
if [[ "$1" == "enable" ]]; then
	while true; do
		read -p "$question" yn
		case $yn in
			[Yy]*)
				echo "$author/$repo_name -> $release_ver"
				curl -fsSL https://copr.fedorainfracloud.org/coprs/$author/$repo_name/repo/fedora-$release_ver/$author-$repo_name-fedora-.repo | pkexec tee $repo_file && break
				;;
			*)
				echo "Unknown option, exiting."; exit 1
				;;
		esac
	done

# remove the named repo
elif [[ "$1" == "remove" ]]; then
	# backup the repo_file and change owner to user
	mkdir -p $backup_dir

	if [[ -e "$repo_file" ]]; then
		# Backup existing repo file and set ownership to the user
		pkexec cp $repo_file $repo_file_bak \
		&& pkexec chown $logged_in_user $repo_file_bak \
		&& echo "Backup created in your home folder."

		# Remove the repo file
		pkexec rm $repo_file \
		&& echo "COPR Repository $author/$repo_name removed." \
		|| echo "ERROR removing COPR repository."
  	else
		# search for the repo_name
		echo "Repo with name $author/$repo_name not found, trying a search..."

		result=$(grep -ril --include='*.repo' "$repo_name" /etc/yum.repos.d/)
		# if not found, exit
		if [[ -z "$result" ]]; then
			echo "No repositories containing '$repo_name' were found."
	  	else
			# if found, make sure it is the right one
			read -rp "Repo '$result' was found. Do you want to backup and remove this repo? (Y/N) " answer
			if [[ "${answer,,}" == "y" ]]; then
				pkexec cp "$result" "$repo_file_bak" \
				&& pkexec chown "$(whoami)" "$repo_file_bak" \
				&& pkexec rm "$result" \
				&& echo "COPR Repository '$repo_name' removed." \
				|| echo "ERROR removing COPR repository."
			fi
	  	fi
  	fi

# list only COPR repositories
elif [[ "$1" == "list" ]]; then
	find /etc/yum.repos.d/ -type f -name '_copr*' -exec basename {} \; | sed 's/_copr_//; s/\.repo$//'

# search, this is just implemented through the browser
elif [[ "$1" == "search" ]]; then
 	xdg-open "https://copr.fedorainfracloud.org/coprs/fulltext/?fulltext=$2"

# disable a repo
elif [[ "$1" == "disable" ]]; then
	sed 's/enabled=1/enabled=0/g' $repo_file > /dev/null \
	&& echo "Repository $author/$repo_name disabled." \
	|| echo "Already disabled or repo not found."

# enable a repo
elif [[ "$1" == "enable" ]]; then
	sed 's/enabled=0/enabled=1/g' $repo_file > /dev/null \
	&& echo "Repository $author/$repo_name enabled" \
	|| echo "Already enabled or repo not found."

fi
